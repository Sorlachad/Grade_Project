define(['dart_sdk', 'packages/firebase_database/src/utils/push_id_generator.dart', 'packages/firebase_core_platform_interface/firebase_core_platform_interface.dart', 'packages/flutter/src/services/system_channels.dart', 'packages/firebase_core/firebase_core.dart'], (function load__packages__firebase_database__firebase_database_dart(dart_sdk, packages__firebase_database__src__utils__push_id_generator$46dart, packages__firebase_core_platform_interface__firebase_core_platform_interface$46dart, packages__flutter__src__services__system_channels$46dart, packages__firebase_core__firebase_core$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const _js_helper = dart_sdk._js_helper;
  const async = dart_sdk.async;
  const collection = dart_sdk.collection;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const push_id_generator = packages__firebase_database__src__utils__push_id_generator$46dart.src__utils__push_id_generator;
  const firebase_core_platform_interface = packages__firebase_core_platform_interface__firebase_core_platform_interface$46dart.firebase_core_platform_interface;
  const platform_channel = packages__flutter__src__services__system_channels$46dart.src__services__platform_channel;
  const message_codecs = packages__flutter__src__services__system_channels$46dart.src__services__message_codecs;
  const message_codec = packages__flutter__src__services__system_channels$46dart.src__services__message_codec;
  const firebase_core = packages__firebase_core__firebase_core$46dart.firebase_core;
  var firebase_database = Object.create(dart.library);
  var $split = dartx.split;
  var $addAll = dartx.addAll;
  var $isEmpty = dartx.isEmpty;
  var $removeLast = dartx.removeLast;
  var $last = dartx.last;
  var $add = dartx.add;
  var $keys = dartx.keys;
  var $_set = dartx._set;
  var $_get = dartx._get;
  var $remove = dartx.remove;
  var $join = dartx.join;
  var $containsKey = dartx.containsKey;
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $runtimeType = dartx.runtimeType;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    IdentityMapOfString$dynamic: () => (T.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    MapOfObjectN$ObjectN: () => (T.MapOfObjectN$ObjectN = dart.constFn(core.Map$(T.ObjectN(), T.ObjectN())))(),
    MapToTransactionResult: () => (T.MapToTransactionResult = dart.constFn(dart.fnType(firebase_database.TransactionResult, [core.Map])))(),
    MapOfString$dynamic: () => (T.MapOfString$dynamic = dart.constFn(core.Map$(core.String, dart.dynamic)))(),
    LinkedHashMapOfString$dynamic: () => (T.LinkedHashMapOfString$dynamic = dart.constFn(collection.LinkedHashMap$(core.String, dart.dynamic)))(),
    FutureOfint: () => (T.FutureOfint = dart.constFn(async.Future$(core.int)))(),
    VoidToFutureOfint: () => (T.VoidToFutureOfint = dart.constFn(dart.fnType(T.FutureOfint(), [])))(),
    FutureOfintTodynamic: () => (T.FutureOfintTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.FutureOfint()])))(),
    StreamControllerOfEvent: () => (T.StreamControllerOfEvent = dart.constFn(async.StreamController$(firebase_database.Event)))(),
    VoidToStreamControllerOfEvent: () => (T.VoidToStreamControllerOfEvent = dart.constFn(dart.fnType(T.StreamControllerOfEvent(), [])))(),
    StreamControllerOfEventTodynamic: () => (T.StreamControllerOfEventTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.StreamControllerOfEvent()])))(),
    FutureOrOfint: () => (T.FutureOrOfint = dart.constFn(async.FutureOr$(core.int)))(),
    dynamicToFutureOrOfint: () => (T.dynamicToFutureOrOfint = dart.constFn(dart.fnType(T.FutureOrOfint(), [dart.dynamic])))(),
    intToNull: () => (T.intToNull = dart.constFn(dart.fnType(core.Null, [core.int])))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    FutureOfNull: () => (T.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    intToFutureOfNull: () => (T.intToFutureOfNull = dart.constFn(dart.fnType(T.FutureOfNull(), [core.int])))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    DataSnapshotN: () => (T.DataSnapshotN = dart.constFn(dart.nullable(firebase_database.DataSnapshot)))(),
    IdentityMapOfString$int: () => (T.IdentityMapOfString$int = dart.constFn(_js_helper.IdentityMap$(core.String, core.int)))(),
    ListOfObjectN: () => (T.ListOfObjectN = dart.constFn(core.List$(T.ObjectN())))(),
    ListNOfObjectN: () => (T.ListNOfObjectN = dart.constFn(dart.nullable(T.ListOfObjectN())))(),
    LinkedMapOfObjectN$ObjectN: () => (T.LinkedMapOfObjectN$ObjectN = dart.constFn(_js_helper.LinkedMap$(T.ObjectN(), T.ObjectN())))(),
    ObjectNToObjectN: () => (T.ObjectNToObjectN = dart.constFn(dart.fnType(T.ObjectN(), [T.ObjectN()])))(),
    MapNOfString$dynamic: () => (T.MapNOfString$dynamic = dart.constFn(dart.nullable(T.MapOfString$dynamic())))(),
    FutureOfMapNOfString$dynamic: () => (T.FutureOfMapNOfString$dynamic = dart.constFn(async.Future$(T.MapNOfString$dynamic())))(),
    MethodCallToFutureOfMapNOfString$dynamic: () => (T.MethodCallToFutureOfMapNOfString$dynamic = dart.constFn(dart.fnType(T.FutureOfMapNOfString$dynamic(), [message_codec.MethodCall])))(),
    IdentityMapOfint$StreamControllerOfEvent: () => (T.IdentityMapOfint$StreamControllerOfEvent = dart.constFn(_js_helper.IdentityMap$(core.int, T.StreamControllerOfEvent())))(),
    FutureOfMutableData: () => (T.FutureOfMutableData = dart.constFn(async.Future$(firebase_database.MutableData)))(),
    MutableDataToFutureOfMutableData: () => (T.MutableDataToFutureOfMutableData = dart.constFn(dart.fnType(T.FutureOfMutableData(), [firebase_database.MutableData])))(),
    IdentityMapOfint$MutableDataToFutureOfMutableData: () => (T.IdentityMapOfint$MutableDataToFutureOfMutableData = dart.constFn(_js_helper.IdentityMap$(core.int, T.MutableDataToFutureOfMutableData())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 5000000
      });
    },
    get C1() {
      return C[1] = dart.constMap(core.String, dart.dynamic, []);
    },
    get C2() {
      return C[2] = dart.constMap(core.String, core.String, [".sv", "timestamp"]);
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: firebase_database._EventType.prototype,
        [_name$]: "_EventType.childAdded",
        index: 0
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: firebase_database._EventType.prototype,
        [_name$]: "_EventType.childRemoved",
        index: 1
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: firebase_database._EventType.prototype,
        [_name$]: "_EventType.childChanged",
        index: 2
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: firebase_database._EventType.prototype,
        [_name$]: "_EventType.childMoved",
        index: 3
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: firebase_database._EventType.prototype,
        [_name$]: "_EventType.value",
        index: 4
      });
    },
    get C8() {
      return C[8] = dart.constList([C[3] || CT.C3, C[4] || CT.C4, C[5] || CT.C5, C[6] || CT.C6, C[7] || CT.C7], firebase_database._EventType);
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: message_codecs.StandardMessageCodec.prototype
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: message_codecs.StandardMethodCodec.prototype,
        [StandardMethodCodec_messageCodec]: C[11] || CT.C11
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: platform_channel.MethodChannel.prototype,
        [MethodChannel__binaryMessenger]: null,
        [MethodChannel_codec]: C[10] || CT.C10,
        [MethodChannel_name]: "plugins.flutter.io/firebase_database"
      });
    }
  }, false);
  var C = Array(12).fill(void 0);
  var I = [
    "file:///C:/s/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_database-7.1.2/lib/src/database_reference.dart",
    "file:///C:/s/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_database-7.1.2/lib/src/query.dart",
    "package:firebase_database/firebase_database.dart"
  ];
  var _database$ = dart.privateName(firebase_database, "_database");
  var _pathComponents = dart.privateName(firebase_database, "_pathComponents");
  var _channel = dart.privateName(firebase_database, "_channel");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _parameters = dart.privateName(firebase_database, "_parameters");
  var _copyWithParameters = dart.privateName(firebase_database, "_copyWithParameters");
  var _observe = dart.privateName(firebase_database, "_observe");
  firebase_database.Query = class Query extends core.Object {
    get path() {
      return this[_pathComponents][$join]("/");
    }
    [_copyWithParameters](parameters) {
      let t0;
      return new firebase_database.Query.__({database: this[_database$], pathComponents: this[_pathComponents], parameters: T.MapOfString$dynamic().unmodifiable((t0 = T.LinkedHashMapOfString$dynamic().from(this[_parameters]), (() => {
          t0[$addAll](parameters);
          return t0;
        })()))});
    }
    buildArguments() {
      let t0;
      t0 = T.LinkedHashMapOfString$dynamic().from(this[_parameters]);
      return (() => {
        t0[$addAll](new (T.IdentityMapOfString$dynamic()).from(["path", this.path]));
        return t0;
      })();
    }
    [_observe](eventType) {
      let _handle = null;
      function _handle$35get() {
        let t1;
        t1 = _handle;
        return t1 == null ? dart.throw(new _internal.LateError.localNI("_handle")) : t1;
      }
      dart.fn(_handle$35get, T.VoidToFutureOfint());
      function _handle$35set(t2) {
        return _handle = t2;
      }
      dart.fn(_handle$35set, T.FutureOfintTodynamic());
      let controller = null;
      function controller$35get() {
        let t5;
        t5 = controller;
        return t5 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t5;
      }
      dart.fn(controller$35get, T.VoidToStreamControllerOfEvent());
      function controller$35set(t6) {
        return controller = t6;
      }
      dart.fn(controller$35set, T.StreamControllerOfEventTodynamic());
      controller$35set(T.StreamControllerOfEvent().broadcast({onListen: dart.fn(() => {
          let t8;
          _handle$35set(this[_database$][_channel].invokeMethod(core.int, "Query#observe", new (T.IdentityMapOfString$dynamic()).from(["app", (t8 = this[_database$].app, t8 == null ? null : t8.name), "databaseURL", this[_database$].databaseURL, "path", this.path, "parameters", this[_parameters], "eventType", eventType.toString()])).then(core.int, dart.fn(result => T.FutureOrOfint().as(result), T.dynamicToFutureOrOfint())));
          _handle$35get().then(core.Null, dart.fn(handle => {
            firebase_database.FirebaseDatabase._observers[$_set](handle, controller$35get());
          }, T.intToNull()));
        }, T.VoidTovoid()), onCancel: dart.fn(() => {
          _handle$35get().then(core.Null, dart.fn(handle => async.async(core.Null, (function*() {
            let t8;
            yield this[_database$][_channel].invokeMethod(core.int, "Query#removeObserver", new (T.IdentityMapOfString$dynamic()).from(["app", (t8 = this[_database$].app, t8 == null ? null : t8.name), "databaseURL", this[_database$].databaseURL, "path", this.path, "parameters", this[_parameters], "handle", handle]));
            firebase_database.FirebaseDatabase._observers[$remove](handle);
          }).bind(this)), T.intToFutureOfNull()));
        }, T.VoidTovoid())}));
      return controller$35get().stream;
    }
    once() {
      return async.async(firebase_database.DataSnapshot, (function* once() {
        return (yield this.onValue.first).snapshot;
      }).bind(this));
    }
    get() {
      return async.async(T.DataSnapshotN(), (function* get() {
        let t8;
        let result = (yield this[_database$][_channel].invokeMethod(core.Map, "Query#get", new (T.IdentityMapOfString$dynamic()).from(["app", (t8 = this[_database$].app, t8 == null ? null : t8.name), "databaseURL", this[_database$].databaseURL, "path", this.path])));
        if (dart.nullCheck(result)[$containsKey]("error") && result[$_get]("error") != null) {
          let errorMap = result[$_get]("error");
          dart.throw(new firebase_core_platform_interface.FirebaseException.new({plugin: "firebase_database", code: "get-failed", message: T.StringN().as(dart.dsend(errorMap, '_get', ["details"]))}));
        } else {
          return firebase_database.DataSnapshot._fromJson(T.MapOfObjectN$ObjectN().as(result[$_get]("snapshot")), null);
        }
      }).bind(this));
    }
    get onChildAdded() {
      return this[_observe](firebase_database._EventType.childAdded);
    }
    get onChildRemoved() {
      return this[_observe](firebase_database._EventType.childRemoved);
    }
    get onChildChanged() {
      return this[_observe](firebase_database._EventType.childChanged);
    }
    get onChildMoved() {
      return this[_observe](firebase_database._EventType.childMoved);
    }
    get onValue() {
      return this[_observe](firebase_database._EventType.value);
    }
    startAt(value, opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      if (!!this[_parameters][$containsKey]("startAt")) dart.assertFailed(null, I[1], 126, 12, "!_parameters.containsKey('startAt')");
      if (!(typeof value == 'string' || typeof value == 'boolean' || typeof value == 'number' || core.int.is(value) || value == null)) dart.assertFailed(null, I[1], 127, 12, "value is String ||\n        value is bool ||\n        value is double ||\n        value is int ||\n        value == null");
      let parameters = new (T.IdentityMapOfString$dynamic()).from(["startAt", value]);
      if (key != null) parameters[$_set]("startAtKey", key);
      return this[_copyWithParameters](parameters);
    }
    endAt(value, opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      if (!!this[_parameters][$containsKey]("endAt")) dart.assertFailed(null, I[1], 142, 12, "!_parameters.containsKey('endAt')");
      if (!(typeof value == 'string' || typeof value == 'boolean' || typeof value == 'number' || core.int.is(value) || value == null)) dart.assertFailed(null, I[1], 143, 12, "value is String ||\n        value is bool ||\n        value is double ||\n        value is int ||\n        value == null");
      let parameters = new (T.IdentityMapOfString$dynamic()).from(["endAt", value]);
      if (key != null) parameters[$_set]("endAtKey", key);
      return this[_copyWithParameters](parameters);
    }
    equalTo(value, opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      if (!!this[_parameters][$containsKey]("equalTo")) dart.assertFailed(null, I[1], 158, 12, "!_parameters.containsKey('equalTo')");
      if (!(typeof value == 'string' || typeof value == 'boolean' || typeof value == 'number' || core.int.is(value) || value == null)) dart.assertFailed(null, I[1], 159, 12, "value is String ||\n        value is bool ||\n        value is double ||\n        value is int ||\n        value == null");
      let parameters = new (T.IdentityMapOfString$dynamic()).from(["equalTo", value]);
      if (key != null) parameters[$_set]("equalToKey", key);
      return this[_copyWithParameters](parameters);
    }
    limitToFirst(limit) {
      if (!!this[_parameters][$containsKey]("limitToFirst")) dart.assertFailed(null, I[1], 171, 12, "!_parameters.containsKey('limitToFirst')");
      return this[_copyWithParameters](new (T.IdentityMapOfString$dynamic()).from(["limitToFirst", limit]));
    }
    limitToLast(limit) {
      if (!!this[_parameters][$containsKey]("limitToLast")) dart.assertFailed(null, I[1], 177, 12, "!_parameters.containsKey('limitToLast')");
      return this[_copyWithParameters](new (T.IdentityMapOfString$dynamic()).from(["limitToLast", limit]));
    }
    orderByChild(key) {
      if (!!this[_parameters][$containsKey]("orderBy")) dart.assertFailed(null, I[1], 186, 12, "!_parameters.containsKey('orderBy')");
      return this[_copyWithParameters](new (T.IdentityMapOfString$dynamic()).from(["orderBy", "child", "orderByChildKey", key]));
    }
    orderByKey() {
      if (!!this[_parameters][$containsKey]("orderBy")) dart.assertFailed(null, I[1], 197, 12, "!_parameters.containsKey('orderBy')");
      return this[_copyWithParameters](new (T.IdentityMapOfString$dynamic()).from(["orderBy", "key"]));
    }
    orderByValue() {
      if (!!this[_parameters][$containsKey]("orderBy")) dart.assertFailed(null, I[1], 206, 12, "!_parameters.containsKey('orderBy')");
      return this[_copyWithParameters](new (T.IdentityMapOfString$dynamic()).from(["orderBy", "value"]));
    }
    orderByPriority() {
      if (!!this[_parameters][$containsKey]("orderBy")) dart.assertFailed(null, I[1], 215, 12, "!_parameters.containsKey('orderBy')");
      return this[_copyWithParameters](new (T.IdentityMapOfString$dynamic()).from(["orderBy", "priority"]));
    }
    reference() {
      return new firebase_database.DatabaseReference.__(this[_database$], this[_pathComponents]);
    }
    keepSynced(value) {
      let t8;
      return this[_database$][_channel].invokeMethod(dart.void, "Query#keepSynced", new (T.IdentityMapOfString$dynamic()).from(["app", (t8 = this[_database$].app, t8 == null ? null : t8.name), "databaseURL", this[_database$].databaseURL, "path", this.path, "parameters", this[_parameters], "value", value]));
    }
  };
  (firebase_database.Query.__ = function(opts) {
    let t0;
    let database = opts && 'database' in opts ? opts.database : null;
    let pathComponents = opts && 'pathComponents' in opts ? opts.pathComponents : null;
    let parameters = opts && 'parameters' in opts ? opts.parameters : null;
    this[_database$] = database;
    this[_pathComponents] = pathComponents;
    this[_parameters] = (t0 = parameters, t0 == null ? C[1] || CT.C1 : t0);
    ;
  }).prototype = firebase_database.Query.prototype;
  dart.addTypeTests(firebase_database.Query);
  dart.addTypeCaches(firebase_database.Query);
  dart.setMethodSignature(firebase_database.Query, () => ({
    __proto__: dart.getMethods(firebase_database.Query.__proto__),
    [_copyWithParameters]: dart.fnType(firebase_database.Query, [core.Map$(core.String, dart.dynamic)]),
    buildArguments: dart.fnType(core.Map$(core.String, dart.dynamic), []),
    [_observe]: dart.fnType(async.Stream$(firebase_database.Event), [firebase_database._EventType]),
    once: dart.fnType(async.Future$(firebase_database.DataSnapshot), []),
    get: dart.fnType(async.Future$(dart.nullable(firebase_database.DataSnapshot)), []),
    startAt: dart.fnType(firebase_database.Query, [dart.dynamic], {key: dart.nullable(core.String)}, {}),
    endAt: dart.fnType(firebase_database.Query, [dart.dynamic], {key: dart.nullable(core.String)}, {}),
    equalTo: dart.fnType(firebase_database.Query, [dart.dynamic], {key: dart.nullable(core.String)}, {}),
    limitToFirst: dart.fnType(firebase_database.Query, [core.int]),
    limitToLast: dart.fnType(firebase_database.Query, [core.int]),
    orderByChild: dart.fnType(firebase_database.Query, [core.String]),
    orderByKey: dart.fnType(firebase_database.Query, []),
    orderByValue: dart.fnType(firebase_database.Query, []),
    orderByPriority: dart.fnType(firebase_database.Query, []),
    reference: dart.fnType(firebase_database.DatabaseReference, []),
    keepSynced: dart.fnType(async.Future$(dart.void), [core.bool])
  }));
  dart.setGetterSignature(firebase_database.Query, () => ({
    __proto__: dart.getGetters(firebase_database.Query.__proto__),
    path: core.String,
    onChildAdded: async.Stream$(firebase_database.Event),
    onChildRemoved: async.Stream$(firebase_database.Event),
    onChildChanged: async.Stream$(firebase_database.Event),
    onChildMoved: async.Stream$(firebase_database.Event),
    onValue: async.Stream$(firebase_database.Event)
  }));
  dart.setLibraryUri(firebase_database.Query, I[2]);
  dart.setFieldSignature(firebase_database.Query, () => ({
    __proto__: dart.getFields(firebase_database.Query.__proto__),
    [_database$]: dart.finalFieldType(firebase_database.FirebaseDatabase),
    [_pathComponents]: dart.finalFieldType(core.List$(core.String)),
    [_parameters]: dart.finalFieldType(core.Map$(core.String, dart.dynamic))
  }));
  firebase_database.DatabaseReference = class DatabaseReference extends firebase_database.Query {
    child(path) {
      let t0;
      return new firebase_database.DatabaseReference.__(this[_database$], (t0 = T.ListOfString().from(this[_pathComponents]), (() => {
        t0[$addAll](path[$split]("/"));
        return t0;
      })()));
    }
    parent() {
      let t0;
      if (this[_pathComponents][$isEmpty]) {
        return null;
      }
      return new firebase_database.DatabaseReference.__(this[_database$], (t0 = T.ListOfString().from(this[_pathComponents]), (() => {
        t0[$removeLast]();
        return t0;
      })()));
    }
    root() {
      return new firebase_database.DatabaseReference.__(this[_database$], T.JSArrayOfString().of([]));
    }
    get key() {
      return this[_pathComponents][$last];
    }
    push() {
      let t0;
      let key = push_id_generator.PushIdGenerator.generatePushChildName();
      let childPath = (t0 = T.ListOfString().from(this[_pathComponents]), (() => {
        t0[$add](key);
        return t0;
      })());
      return new firebase_database.DatabaseReference.__(this[_database$], childPath);
    }
    set(value, opts) {
      let t0;
      let priority = opts && 'priority' in opts ? opts.priority : null;
      return this[_database$][_channel].invokeMethod(dart.void, "DatabaseReference#set", new (T.IdentityMapOfString$dynamic()).from(["app", (t0 = this[_database$].app, t0 == null ? null : t0.name), "databaseURL", this[_database$].databaseURL, "path", this.path, "value", value, "priority", priority]));
    }
    update(value) {
      let t0;
      return this[_database$][_channel].invokeMethod(dart.void, "DatabaseReference#update", new (T.IdentityMapOfString$dynamic()).from(["app", (t0 = this[_database$].app, t0 == null ? null : t0.name), "databaseURL", this[_database$].databaseURL, "path", this.path, "value", value]));
    }
    setPriority(priority) {
      return async.async(dart.void, (function* setPriority() {
        let t0;
        return this[_database$][_channel].invokeMethod(dart.void, "DatabaseReference#setPriority", new (T.IdentityMapOfString$dynamic()).from(["app", (t0 = this[_database$].app, t0 == null ? null : t0.name), "databaseURL", this[_database$].databaseURL, "path", this.path, "priority", priority]));
      }).bind(this));
    }
    remove() {
      return this.set(null);
    }
    runTransaction(transactionHandler, opts) {
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[0] || CT.C0;
      return async.async(firebase_database.TransactionResult, (function* runTransaction() {
        let t0;
        if (!(timeout.inMilliseconds > 0)) dart.assertFailed("Transaction timeout must be more than 0 milliseconds.", I[0], 153, 7, "timeout.inMilliseconds > 0");
        let transactionKey = firebase_database.FirebaseDatabase._transactions[$isEmpty] ? 0 : firebase_database.FirebaseDatabase._transactions[$keys][$last] + 1;
        firebase_database.FirebaseDatabase._transactions[$_set](transactionKey, transactionHandler);
        function toTransactionResult(map) {
          let databaseError = map[$_get]("error") != null ? new firebase_database.DatabaseError.__(core.Map.as(map[$_get]("error"))) : null;
          let committed = core.bool.as(map[$_get]("committed"));
          let dataSnapshot = map[$_get]("snapshot") != null ? firebase_database.DataSnapshot._fromJson(T.MapOfObjectN$ObjectN().as(map[$_get]("snapshot")), null) : null;
          firebase_database.FirebaseDatabase._transactions[$remove](transactionKey);
          return new firebase_database.TransactionResult.__(databaseError, committed, dataSnapshot);
        }
        dart.fn(toTransactionResult, T.MapToTransactionResult());
        let response = (yield this[_database$][_channel].invokeMethod(T.MapOfObjectN$ObjectN(), "DatabaseReference#runTransaction", new (T.IdentityMapOfString$dynamic()).from(["app", (t0 = this[_database$].app, t0 == null ? null : t0.name), "databaseURL", this[_database$].databaseURL, "path", this.path, "transactionKey", transactionKey, "transactionTimeout", timeout.inMilliseconds])));
        return toTransactionResult(dart.nullCheck(response));
      }).bind(this));
    }
    onDisconnect() {
      return new firebase_database.OnDisconnect.__(this[_database$], this);
    }
  };
  (firebase_database.DatabaseReference.__ = function(database, pathComponents) {
    firebase_database.DatabaseReference.__proto__.__.call(this, {database: database, pathComponents: pathComponents});
    ;
  }).prototype = firebase_database.DatabaseReference.prototype;
  dart.addTypeTests(firebase_database.DatabaseReference);
  dart.addTypeCaches(firebase_database.DatabaseReference);
  dart.setMethodSignature(firebase_database.DatabaseReference, () => ({
    __proto__: dart.getMethods(firebase_database.DatabaseReference.__proto__),
    child: dart.fnType(firebase_database.DatabaseReference, [core.String]),
    parent: dart.fnType(dart.nullable(firebase_database.DatabaseReference), []),
    root: dart.fnType(firebase_database.DatabaseReference, []),
    push: dart.fnType(firebase_database.DatabaseReference, []),
    set: dart.fnType(async.Future$(dart.void), [dart.dynamic], {priority: dart.dynamic}, {}),
    update: dart.fnType(async.Future$(dart.void), [core.Map$(core.String, dart.dynamic)]),
    setPriority: dart.fnType(async.Future$(dart.void), [dart.dynamic]),
    remove: dart.fnType(async.Future$(dart.void), []),
    runTransaction: dart.fnType(async.Future$(firebase_database.TransactionResult), [dart.fnType(async.Future$(firebase_database.MutableData), [firebase_database.MutableData])], {timeout: core.Duration}, {}),
    onDisconnect: dart.fnType(firebase_database.OnDisconnect, [])
  }));
  dart.setGetterSignature(firebase_database.DatabaseReference, () => ({
    __proto__: dart.getGetters(firebase_database.DatabaseReference.__proto__),
    key: core.String
  }));
  dart.setLibraryUri(firebase_database.DatabaseReference, I[2]);
  firebase_database.ServerValue = class ServerValue extends core.Object {
    static increment(delta) {
      return new _js_helper.LinkedMap.from([".sv", new (T.IdentityMapOfString$int()).from(["increment", delta])]);
    }
  };
  (firebase_database.ServerValue.new = function() {
    ;
  }).prototype = firebase_database.ServerValue.prototype;
  dart.addTypeTests(firebase_database.ServerValue);
  dart.addTypeCaches(firebase_database.ServerValue);
  dart.setLibraryUri(firebase_database.ServerValue, I[2]);
  dart.defineLazy(firebase_database.ServerValue, {
    /*firebase_database.ServerValue.timestamp*/get timestamp() {
      return C[2] || CT.C2;
    }
  }, false);
  var error$ = dart.privateName(firebase_database, "TransactionResult.error");
  var committed$ = dart.privateName(firebase_database, "TransactionResult.committed");
  var dataSnapshot$ = dart.privateName(firebase_database, "TransactionResult.dataSnapshot");
  firebase_database.TransactionResult = class TransactionResult extends core.Object {
    get error() {
      return this[error$];
    }
    set error(value) {
      super.error = value;
    }
    get committed() {
      return this[committed$];
    }
    set committed(value) {
      super.committed = value;
    }
    get dataSnapshot() {
      return this[dataSnapshot$];
    }
    set dataSnapshot(value) {
      super.dataSnapshot = value;
    }
  };
  (firebase_database.TransactionResult.__ = function(error, committed, dataSnapshot) {
    this[error$] = error;
    this[committed$] = committed;
    this[dataSnapshot$] = dataSnapshot;
    ;
  }).prototype = firebase_database.TransactionResult.prototype;
  dart.addTypeTests(firebase_database.TransactionResult);
  dart.addTypeCaches(firebase_database.TransactionResult);
  dart.setLibraryUri(firebase_database.TransactionResult, I[2]);
  dart.setFieldSignature(firebase_database.TransactionResult, () => ({
    __proto__: dart.getFields(firebase_database.TransactionResult.__proto__),
    error: dart.finalFieldType(dart.nullable(firebase_database.DatabaseError)),
    committed: dart.finalFieldType(core.bool),
    dataSnapshot: dart.finalFieldType(dart.nullable(firebase_database.DataSnapshot))
  }));
  var _name$ = dart.privateName(firebase_database, "_name");
  firebase_database._EventType = class _EventType extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (firebase_database._EventType.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = firebase_database._EventType.prototype;
  dart.addTypeTests(firebase_database._EventType);
  dart.addTypeCaches(firebase_database._EventType);
  dart.setLibraryUri(firebase_database._EventType, I[2]);
  dart.setFieldSignature(firebase_database._EventType, () => ({
    __proto__: dart.getFields(firebase_database._EventType.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(firebase_database._EventType, ['toString']);
  firebase_database._EventType.childAdded = C[3] || CT.C3;
  firebase_database._EventType.childRemoved = C[4] || CT.C4;
  firebase_database._EventType.childChanged = C[5] || CT.C5;
  firebase_database._EventType.childMoved = C[6] || CT.C6;
  firebase_database._EventType.value = C[7] || CT.C7;
  firebase_database._EventType.values = C[8] || CT.C8;
  var snapshot = dart.privateName(firebase_database, "Event.snapshot");
  var previousSiblingKey = dart.privateName(firebase_database, "Event.previousSiblingKey");
  firebase_database.Event = class Event extends core.Object {
    get snapshot() {
      return this[snapshot];
    }
    set snapshot(value) {
      super.snapshot = value;
    }
    get previousSiblingKey() {
      return this[previousSiblingKey];
    }
    set previousSiblingKey(value) {
      super.previousSiblingKey = value;
    }
  };
  (firebase_database.Event.__ = function(_data) {
    this[previousSiblingKey] = T.StringN().as(_data[$_get]("previousSiblingKey"));
    this[snapshot] = firebase_database.DataSnapshot._fromJson(T.MapOfObjectN$ObjectN().as(dart.nullCheck(_data[$_get]("snapshot"))), T.ListNOfObjectN().as(_data[$_get]("childKeys")));
    ;
  }).prototype = firebase_database.Event.prototype;
  dart.addTypeTests(firebase_database.Event);
  dart.addTypeCaches(firebase_database.Event);
  dart.setLibraryUri(firebase_database.Event, I[2]);
  dart.setFieldSignature(firebase_database.Event, () => ({
    __proto__: dart.getFields(firebase_database.Event.__proto__),
    snapshot: dart.finalFieldType(firebase_database.DataSnapshot),
    previousSiblingKey: dart.finalFieldType(dart.nullable(core.String))
  }));
  var key$ = dart.privateName(firebase_database, "DataSnapshot.key");
  var value$ = dart.privateName(firebase_database, "DataSnapshot.value");
  firebase_database.DataSnapshot = class DataSnapshot extends core.Object {
    get key() {
      return this[key$];
    }
    set key(value) {
      super.key = value;
    }
    get value() {
      return this[value$];
    }
    set value(value) {
      super.value = value;
    }
    static _fromJson(_data, childKeys) {
      let dataValue = _data[$_get]("value");
      let value = null;
      if (T.MapOfObjectN$ObjectN().is(dataValue) && childKeys != null) {
        value = (() => {
          let t8 = new (T.LinkedMapOfObjectN$ObjectN()).new();
          for (let key of childKeys)
            t8[$_set](key, dataValue[$_get](key));
          return t8;
        })();
      } else if (T.ListOfObjectN().is(dataValue)) {
        value = dart.nullCheck(childKeys)[$map](T.ObjectN(), dart.fn(key => dataValue[$_get](core.int.parse(core.String.as(dart.nullCheck(key)))), T.ObjectNToObjectN()))[$toList]();
      } else {
        value = dataValue;
      }
      return new firebase_database.DataSnapshot.__(T.StringN().as(_data[$_get]("key")), value);
    }
  };
  (firebase_database.DataSnapshot.__ = function(key, value) {
    this[key$] = key;
    this[value$] = value;
    ;
  }).prototype = firebase_database.DataSnapshot.prototype;
  dart.addTypeTests(firebase_database.DataSnapshot);
  dart.addTypeCaches(firebase_database.DataSnapshot);
  dart.setLibraryUri(firebase_database.DataSnapshot, I[2]);
  dart.setFieldSignature(firebase_database.DataSnapshot, () => ({
    __proto__: dart.getFields(firebase_database.DataSnapshot.__proto__),
    key: dart.finalFieldType(dart.nullable(core.String)),
    value: dart.finalFieldType(dart.dynamic)
  }));
  var _data$ = dart.privateName(firebase_database, "_data");
  firebase_database.MutableData = class MutableData extends core.Object {
    get key() {
      return core.String.as(this[_data$][$_get]("key"));
    }
    get value() {
      return this[_data$][$_get]("value");
    }
    set value(newValue) {
      let t11, t10, t9;
      t9 = this[_data$];
      t10 = "value";
      t11 = newValue;
      t9[$_set](t10, t11);
      return t11;
    }
  };
  (firebase_database.MutableData.private = function(_data) {
    this[_data$] = _data;
    ;
  }).prototype = firebase_database.MutableData.prototype;
  dart.addTypeTests(firebase_database.MutableData);
  dart.addTypeCaches(firebase_database.MutableData);
  dart.setGetterSignature(firebase_database.MutableData, () => ({
    __proto__: dart.getGetters(firebase_database.MutableData.__proto__),
    key: core.String,
    value: dart.dynamic
  }));
  dart.setSetterSignature(firebase_database.MutableData, () => ({
    __proto__: dart.getSetters(firebase_database.MutableData.__proto__),
    value: dart.dynamic
  }));
  dart.setLibraryUri(firebase_database.MutableData, I[2]);
  dart.setFieldSignature(firebase_database.MutableData, () => ({
    __proto__: dart.getFields(firebase_database.MutableData.__proto__),
    [_data$]: dart.finalFieldType(core.Map)
  }));
  firebase_database.DatabaseError = class DatabaseError extends core.Object {
    get code() {
      return core.int.as(this[_data$][$_get]("code"));
    }
    get message() {
      return core.String.as(this[_data$][$_get]("message"));
    }
    get details() {
      return core.String.as(this[_data$][$_get]("details"));
    }
    toString() {
      return dart.str(this[$runtimeType]) + "(" + dart.str(this.code) + ", " + this.message + ", " + this.details + ")";
    }
  };
  (firebase_database.DatabaseError.__ = function(_data) {
    this[_data$] = _data;
    ;
  }).prototype = firebase_database.DatabaseError.prototype;
  dart.addTypeTests(firebase_database.DatabaseError);
  dart.addTypeCaches(firebase_database.DatabaseError);
  dart.setGetterSignature(firebase_database.DatabaseError, () => ({
    __proto__: dart.getGetters(firebase_database.DatabaseError.__proto__),
    code: core.int,
    message: core.String,
    details: core.String
  }));
  dart.setLibraryUri(firebase_database.DatabaseError, I[2]);
  dart.setFieldSignature(firebase_database.DatabaseError, () => ({
    __proto__: dart.getFields(firebase_database.DatabaseError.__proto__),
    [_data$]: dart.fieldType(core.Map)
  }));
  dart.defineExtensionMethods(firebase_database.DatabaseError, ['toString']);
  var app$ = dart.privateName(firebase_database, "FirebaseDatabase.app");
  var databaseURL$ = dart.privateName(firebase_database, "FirebaseDatabase.databaseURL");
  var MethodChannel__binaryMessenger = dart.privateName(platform_channel, "MethodChannel._binaryMessenger");
  var StandardMethodCodec_messageCodec = dart.privateName(message_codecs, "StandardMethodCodec.messageCodec");
  var MethodChannel_codec = dart.privateName(platform_channel, "MethodChannel.codec");
  var MethodChannel_name = dart.privateName(platform_channel, "MethodChannel.name");
  firebase_database.FirebaseDatabase = class FirebaseDatabase extends core.Object {
    get app() {
      return this[app$];
    }
    set app(value) {
      super.app = value;
    }
    get databaseURL() {
      return this[databaseURL$];
    }
    set databaseURL(value) {
      super.databaseURL = value;
    }
    static get instance() {
      return firebase_database.FirebaseDatabase._instance;
    }
    reference() {
      return new firebase_database.DatabaseReference.__(this, T.JSArrayOfString().of([]));
    }
    setPersistenceEnabled(enabled) {
      return async.async(core.bool, (function* setPersistenceEnabled() {
        let t9;
        let result = (yield this[_channel].invokeMethod(core.bool, "FirebaseDatabase#setPersistenceEnabled", new (T.IdentityMapOfString$dynamic()).from(["app", (t9 = this.app, t9 == null ? null : t9.name), "databaseURL", this.databaseURL, "enabled", enabled])));
        return dart.nullCheck(result);
      }).bind(this));
    }
    setPersistenceCacheSizeBytes(cacheSize) {
      return async.async(core.bool, (function* setPersistenceCacheSizeBytes() {
        let t9;
        let result = (yield this[_channel].invokeMethod(core.bool, "FirebaseDatabase#setPersistenceCacheSizeBytes", new (T.IdentityMapOfString$dynamic()).from(["app", (t9 = this.app, t9 == null ? null : t9.name), "databaseURL", this.databaseURL, "cacheSize", cacheSize])));
        return dart.nullCheck(result);
      }).bind(this));
    }
    goOnline() {
      let t9;
      return this[_channel].invokeMethod(dart.void, "FirebaseDatabase#goOnline", new (T.IdentityMapOfString$dynamic()).from(["app", (t9 = this.app, t9 == null ? null : t9.name), "databaseURL", this.databaseURL]));
    }
    goOffline() {
      let t9;
      return this[_channel].invokeMethod(dart.void, "FirebaseDatabase#goOffline", new (T.IdentityMapOfString$dynamic()).from(["app", (t9 = this.app, t9 == null ? null : t9.name), "databaseURL", this.databaseURL]));
    }
    purgeOutstandingWrites() {
      let t9;
      return this[_channel].invokeMethod(dart.void, "FirebaseDatabase#purgeOutstandingWrites", new (T.IdentityMapOfString$dynamic()).from(["app", (t9 = this.app, t9 == null ? null : t9.name), "databaseURL", this.databaseURL]));
    }
  };
  (firebase_database.FirebaseDatabase.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    this[_channel] = C[9] || CT.C9;
    this[app$] = app;
    this[databaseURL$] = databaseURL;
    if (firebase_database.FirebaseDatabase._initialized) return;
    this[_channel].setMethodCallHandler(dart.fn(call => async.async(T.MapNOfString$dynamic(), function*() {
      let t9, t9$;
      switch (call.method) {
        case "Event":
        {
          let event = new firebase_database.Event.__(T.MapOfObjectN$ObjectN().as(call.arguments));
          t9 = firebase_database.FirebaseDatabase._observers[$_get](dart.dsend(call.arguments, '_get', ["handle"]));
          t9 == null ? null : t9.add(event);
          return null;
        }
        case "Error":
        {
          let error = new firebase_database.DatabaseError.__(core.Map.as(dart.dsend(call.arguments, '_get', ["error"])));
          t9$ = firebase_database.FirebaseDatabase._observers[$_get](dart.dsend(call.arguments, '_get', ["handle"]));
          t9$ == null ? null : t9$.addError(error);
          return null;
        }
        case "DoTransaction":
        {
          let mutableData = new firebase_database.MutableData.private(core.Map.as(dart.dsend(call.arguments, '_get', ["snapshot"])));
          let updated = (yield dart.nullCheck(firebase_database.FirebaseDatabase._transactions[$_get](dart.dsend(call.arguments, '_get', ["transactionKey"])))(mutableData));
          return new (T.IdentityMapOfString$dynamic()).from(["value", updated.value]);
        }
        default:
        {
          dart.throw(new message_codec.MissingPluginException.new(call.method + " method not implemented on the Dart side."));
        }
      }
    }), T.MethodCallToFutureOfMapNOfString$dynamic()));
    firebase_database.FirebaseDatabase._initialized = true;
  }).prototype = firebase_database.FirebaseDatabase.prototype;
  dart.addTypeTests(firebase_database.FirebaseDatabase);
  dart.addTypeCaches(firebase_database.FirebaseDatabase);
  dart.setMethodSignature(firebase_database.FirebaseDatabase, () => ({
    __proto__: dart.getMethods(firebase_database.FirebaseDatabase.__proto__),
    reference: dart.fnType(firebase_database.DatabaseReference, []),
    setPersistenceEnabled: dart.fnType(async.Future$(core.bool), [core.bool]),
    setPersistenceCacheSizeBytes: dart.fnType(async.Future$(core.bool), [core.int]),
    goOnline: dart.fnType(async.Future$(dart.void), []),
    goOffline: dart.fnType(async.Future$(dart.void), []),
    purgeOutstandingWrites: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setLibraryUri(firebase_database.FirebaseDatabase, I[2]);
  dart.setFieldSignature(firebase_database.FirebaseDatabase, () => ({
    __proto__: dart.getFields(firebase_database.FirebaseDatabase.__proto__),
    [_channel]: dart.finalFieldType(platform_channel.MethodChannel),
    app: dart.finalFieldType(dart.nullable(firebase_core.FirebaseApp)),
    databaseURL: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineLazy(firebase_database.FirebaseDatabase, {
    /*firebase_database.FirebaseDatabase._observers*/get _observers() {
      return new (T.IdentityMapOfint$StreamControllerOfEvent()).new();
    },
    /*firebase_database.FirebaseDatabase._transactions*/get _transactions() {
      return new (T.IdentityMapOfint$MutableDataToFutureOfMutableData()).new();
    },
    /*firebase_database.FirebaseDatabase._initialized*/get _initialized() {
      return false;
    },
    set _initialized(_) {},
    /*firebase_database.FirebaseDatabase._instance*/get _instance() {
      return new firebase_database.FirebaseDatabase.new();
    },
    set _instance(_) {}
  }, false);
  var path = dart.privateName(firebase_database, "OnDisconnect.path");
  firebase_database.OnDisconnect = class OnDisconnect extends core.Object {
    get path() {
      return this[path];
    }
    set path(value) {
      super.path = value;
    }
    set(value, opts) {
      let t9;
      let priority = opts && 'priority' in opts ? opts.priority : null;
      return this[_database$][_channel].invokeMethod(dart.void, "OnDisconnect#set", new (T.IdentityMapOfString$dynamic()).from(["app", (t9 = this[_database$].app, t9 == null ? null : t9.name), "databaseURL", this[_database$].databaseURL, "path", this.path, "value", value, "priority", priority]));
    }
    remove() {
      return this.set(null);
    }
    cancel() {
      let t9;
      return this[_database$][_channel].invokeMethod(dart.void, "OnDisconnect#cancel", new (T.IdentityMapOfString$dynamic()).from(["app", (t9 = this[_database$].app, t9 == null ? null : t9.name), "databaseURL", this[_database$].databaseURL, "path", this.path]));
    }
    update(value) {
      let t9;
      return this[_database$][_channel].invokeMethod(dart.void, "OnDisconnect#update", new (T.IdentityMapOfString$dynamic()).from(["app", (t9 = this[_database$].app, t9 == null ? null : t9.name), "databaseURL", this[_database$].databaseURL, "path", this.path, "value", value]));
    }
  };
  (firebase_database.OnDisconnect.__ = function(_database, reference) {
    this[_database$] = _database;
    this[path] = reference.path;
    ;
  }).prototype = firebase_database.OnDisconnect.prototype;
  dart.addTypeTests(firebase_database.OnDisconnect);
  dart.addTypeCaches(firebase_database.OnDisconnect);
  dart.setMethodSignature(firebase_database.OnDisconnect, () => ({
    __proto__: dart.getMethods(firebase_database.OnDisconnect.__proto__),
    set: dart.fnType(async.Future$(dart.void), [dart.dynamic], {priority: dart.dynamic}, {}),
    remove: dart.fnType(async.Future$(dart.void), []),
    cancel: dart.fnType(async.Future$(dart.void), []),
    update: dart.fnType(async.Future$(dart.void), [core.Map$(core.String, dart.dynamic)])
  }));
  dart.setLibraryUri(firebase_database.OnDisconnect, I[2]);
  dart.setFieldSignature(firebase_database.OnDisconnect, () => ({
    __proto__: dart.getFields(firebase_database.OnDisconnect.__proto__),
    [_database$]: dart.finalFieldType(firebase_database.FirebaseDatabase),
    path: dart.finalFieldType(core.String)
  }));
  dart.trackLibraries("packages/firebase_database/firebase_database.dart", {
    "package:firebase_database/firebase_database.dart": firebase_database
  }, {
    "package:firebase_database/firebase_database.dart": ["src/database_reference.dart", "src/event.dart", "src/firebase_database.dart", "src/on_disconnect.dart", "src/query.dart"]
  }, '{"version":3,"sourceRoot":"","sources":["src/query.dart","src/database_reference.dart","src/event.dart","src/firebase_database.dart","src/on_disconnect.dart"],"names":[],"mappings":"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","file":"../../../../../../../../D:/packages/firebase_database/firebase_database.dart.lib.js"}');
  // Exports:
  return {
    firebase_database: firebase_database
  };
}));

//# sourceMappingURL=firebase_database.dart.lib.js.map
